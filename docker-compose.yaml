---

services:

  db:
    image: postgres
    restart: always
    container_name: db
    env_file:
      - "$PWD/backend/.env"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - "$PWD/my-postgres.conf:/etc/postgresql/postgresql.conf"
      - "$PWD/init.sql:/docker-entrypoint-initdb.d/init.sql"
      - pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - dbnet

  adminer:
    image: adminer
    restart: always
    environment:
      - ADMINER_DEFAULT_SERVER=db
    ports:
      - 8080:8080
    depends_on:
      - db
    networks:
      - dbnet
      - proxynet
    
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    container_name: backend
    env_file:
      - "$PWD/backend/.env"
    ports:
      - 8000:8000
    depends_on:
      - db
    networks:
      - dbnet
      - proxynet
      - webnet
  
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    env_file:
      - "$PWD/frontend/.env"
    ports:
      - 5173:80
    depends_on:
      - db
    networks:
      - webnet
      - proxynet
  
  proxy:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      - proxynet

volumes:
  pgdata:

networks:
  webnet:
  proxynet:
  dbnet: